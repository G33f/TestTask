time="2022-12-01T14:44:28+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T14:47:15+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T14:58:11+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T14:58:11+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $2 WHERE id = $1; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:02:13+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:02:13+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $2 WHERE id = $1; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:05:19+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:05:19+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $2 WHERE id = $1; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:07:17+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:07:17+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $2 WHERE id = $1; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:10:23+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:10:23+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $2 WHERE id = $1; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:15:47+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:15:47+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:17:14+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:17:14+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:19:27+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:19:27+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:20:24+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:20:24+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:22:20+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:22:20+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:23:24+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:23:24+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:26:34+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:26:34+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:29:09+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:29:09+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:29:14+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:29:14+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:30:27+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:30:27+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:32:27+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:32:27+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:32:37+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:32:37+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:32:53+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:32:53+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:33:11+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:33:11+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:33:40+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:33:40+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:34:34+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:34:34+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T15:34:45+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T15:34:45+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T19:00:36+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T19:00:36+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T19:00:36+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-01T19:03:30+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T19:03:30+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-01T19:03:30+03:00" level=error msg="SQL Error: null value in column \"id\" of relation \"transaction\" violates not-null constraint, Detail: Failing row contains (ccd04378-17dc-4857-8d04-9c3c939a319f, eca548a8-8833-4152-8629-9e0fa69d8ca7, 0, send, null)., Where: , Code: 23502, SQLState: 23502" func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:37"
time="2022-12-01T20:35:11+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T20:35:11+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-01T20:35:11+03:00" level=error msg="SQL Error: null value in column \"id\" of relation \"transaction\" violates not-null constraint, Detail: Failing row contains (ccd04378-17dc-4857-8d04-9c3c939a319f, eca548a8-8833-4152-8629-9e0fa69d8ca7, 0, send, null)., Where: , Code: 23502, SQLState: 23502" func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:37"
time="2022-12-01T20:36:00+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T20:36:00+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-01T20:36:00+03:00" level=error msg="SQL Error: null value in column \"id\" of relation \"transaction\" violates not-null constraint, Detail: Failing row contains (ccd04378-17dc-4857-8d04-9c3c939a319f, eca548a8-8833-4152-8629-9e0fa69d8ca7, 0, send, null)., Where: , Code: 23502, SQLState: 23502" func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:37"
time="2022-12-01T20:36:29+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T20:36:29+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-01T20:36:29+03:00" level=error msg="SQL Error: null value in column \"id\" of relation \"transaction\" violates not-null constraint, Detail: Failing row contains (ccd04378-17dc-4857-8d04-9c3c939a319f, eca548a8-8833-4152-8629-9e0fa69d8ca7, 0, send, null)., Where: , Code: 23502, SQLState: 23502" func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:37"
time="2022-12-01T20:37:03+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T20:37:04+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-01T20:37:04+03:00" level=error msg="SQL Error: null value in column \"id\" of relation \"transaction\" violates not-null constraint, Detail: Failing row contains (ccd04378-17dc-4857-8d04-9c3c939a319f, eca548a8-8833-4152-8629-9e0fa69d8ca7, 0, send, null)., Where: , Code: 23502, SQLState: 23502" func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:37"
time="2022-12-01T20:43:49+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T20:43:49+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-01T20:43:49+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T20:43:49+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-01T20:45:59+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-01T20:45:59+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-01T20:45:59+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-01T20:46:00+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-01T20:46:00+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:07:43+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T11:07:43+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T11:07:44+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:07:45+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:13:59+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T11:13:59+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T11:13:59+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:13:59+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:13:59+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:17:21+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T11:17:21+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T11:17:21+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:17:21+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:17:21+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:19:34+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T11:19:34+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T11:19:34+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:19:34+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:19:34+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:19:34+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:20:02+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T11:20:02+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T11:20:02+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:20:02+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:20:02+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:20:02+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:38:47+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T11:38:47+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T11:38:47+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:38:47+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:38:48+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:38:48+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:39:10+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T11:39:10+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T11:39:11+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:39:12+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:39:12+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:39:12+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T11:40:27+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T11:40:27+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T11:40:27+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T11:40:27+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:26:14+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T13:26:14+03:00" level=trace msg="SQL Query:  SELECT id, sender, receiver, amount, status FROM public.transaction  WHERE status != 'closest'; " func="TestTask/internal/transaction/db.(*repository).FindAllNotDone()" file="postgresql.go:51"
time="2022-12-02T13:27:38+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T13:27:38+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:27:38+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:27:38+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:27:38+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:30:54+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T13:30:54+03:00" level=trace msg="SQL Query:  SELECT id, sender, receiver, amount, status FROM public.transaction  WHERE status != 'closest'; " func="TestTask/internal/transaction/db.(*repository).FindAllNotDone()" file="postgresql.go:51"
time="2022-12-02T13:31:09+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T13:31:09+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:31:09+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:31:09+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:31:09+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:32:36+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T13:32:36+03:00" level=trace msg="SQL Query:  SELECT id, sender, receiver, amount, status FROM public.transaction  WHERE status != 'closest'; " func="TestTask/internal/transaction/db.(*repository).FindAllNotDone()" file="postgresql.go:51"
time="2022-12-02T13:32:41+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T13:32:41+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:32:41+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:32:41+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:32:41+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:33:46+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T13:33:46+03:00" level=trace msg="SQL Query:  SELECT id, sender, receiver, amount, status FROM public.transaction  WHERE status != 'closest'; " func="TestTask/internal/transaction/db.(*repository).FindAllNotDone()" file="postgresql.go:51"
time="2022-12-02T13:33:55+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T13:33:55+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:33:55+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:33:55+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:33:55+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:35:18+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T13:35:18+03:00" level=trace msg="SQL Query:  SELECT id, sender, receiver, amount, status FROM public.transaction  WHERE status != 'closest'; " func="TestTask/internal/transaction/db.(*repository).FindAllNotDone()" file="postgresql.go:51"
time="2022-12-02T13:35:23+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T13:35:23+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:35:23+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:35:23+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:35:23+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:38:59+03:00" level=trace msg="SQL Query:  SELECT id, firstName, lastName, balance FROM public.clientvalet; " func="TestTask/internal/client/db.(*repository).FindAll()" file="postgresql.go:49"
time="2022-12-02T13:38:59+03:00" level=trace msg="SQL Query:  SELECT id, sender, receiver, amount, status FROM public.transaction  WHERE status != 'closest'; " func="TestTask/internal/transaction/db.(*repository).FindAllNotDone()" file="postgresql.go:51"
time="2022-12-02T13:39:16+03:00" level=trace msg="SQL Query:  INSERT INTO transaction      (sender, receiver, amount, status)  VALUES         ($1, $2, $3, $4)  RETURNING id " func="TestTask/internal/transaction/db.(*repository).Create()" file="postgresql.go:31"
time="2022-12-02T13:39:16+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:39:16+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
time="2022-12-02T13:39:16+03:00" level=trace msg="SQL Query:  UPDATE clientvalet SET balance = $1 WHERE id = $2; " func="TestTask/internal/client/db.(*repository).Update()" file="postgresql.go:88"
time="2022-12-02T13:39:16+03:00" level=trace msg="SQL Query:  UPDATE transaction SET status = $1 WHERE id = $2; " func="TestTask/internal/transaction/db.(*repository).Update()" file="postgresql.go:90"
